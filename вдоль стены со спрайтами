import pygame
import sys

FPS = 60
WIN_WIDTH = 600
WIN_HEIGHT = 400
WHITE = (255, 255, 255)
ORANGE = (255, 150, 100)

clock = pygame.time.Clock()
sc = pygame.display.set_mode((WIN_WIDTH, WIN_HEIGHT))

class TrailPoint(pygame.sprite.Sprite):
    def __init__(self, position):
        super().__init__()
        self.image = pygame.Surface((2, 2), pygame.SRCALPHA)
        self.rect = self.image.get_rect(center=position)

# Создание группы спрайтов
all_sprites = pygame.sprite.Group()

# радиус будущего круга
r = 10
# координаты круга
# начинаем с левого нижнего угла
x = r
y = WIN_HEIGHT - r

# список для хранения координат следа от круга
trail = []

# направление движения (вправо, вверх, влево, вниз)
direction = "right"

# флаг для определения, прошел ли круг по периметру окна
circle_completed = False

while circle_completed == False:
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            pygame.time.wait(2000)  # Задержка в 2 секунды перед закрытием окна
            sys.exit()

    # заливаем фон
    sc.fill(WHITE)

    # обновляем и отображаем спрайты точек следа
    for point in trail:
        pygame.draw.circle(sc, ORANGE, point, 2)

    # добавляем текущие координаты круга в список следа
    trail.append((x, y))

    # создаем спрайт-точку и добавляем в группу спрайтов
    trail_point = TrailPoint((x, y))
    all_sprites.add(trail_point)

    # рисуем круг
    pygame.draw.circle(sc, ORANGE, (x, y), r)

    # обновляем экран
    all_sprites.update()
    all_sprites.draw(sc)
    pygame.display.update()

    if direction == "right":
        x += 2
        if x >= WIN_WIDTH - r:
            direction = "up"
    elif direction == "up":
        y -= 2
        if y <= r:
            direction = "left"
    elif direction == "left":
        x -= 2
        if x <= r:
            direction = "down"
    elif direction == "down":
        y += 2
        if y >= WIN_HEIGHT - r:
            direction = "right"
            circle_completed = True

    clock.tick(FPS)

В этой версии кода спрайты точек следа создаются с помощью класса `TrailPoint`, который наследует от `pygame.sprite.Sprite`. Эти спрайты добавляются в группу `all_sprites` и обновляются и отображаются на экране вместе с отображением круга. Таким образом, функциональность остается такой же, как и в изначальном коде, но теперь используются спрайты и их группы для управления отображением и обновлением элементов на экране.
